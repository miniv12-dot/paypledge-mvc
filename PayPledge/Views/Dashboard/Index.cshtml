@model PayPledge.Controllers.DashboardViewModel
@{
    ViewData["Title"] = "Dashboard - PayPledge";
}

<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="h3 mb-0">Welcome back, @Model.User.FirstName!</h1>
                <p class="text-muted">Here's what's happening with your transactions</p>
            </div>
            <div>
                <a href="#" class="btn btn-primary">
                    <i class="fas fa-plus"></i> New Transaction
                </a>
            </div>
        </div>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-primary text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Statistics.ActiveTransactions</h4>
                        <p class="mb-0">Active Transactions</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-clock fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-success text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">@Model.Statistics.CompletedTransactions</h4>
                        <p class="mb-0">Completed</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-check-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-info text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">$@Model.Statistics.TotalSpent.ToString("N2")</h4>
                        <p class="mb-0">Total Spent</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-shopping-cart fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-warning text-white">
            <div class="card-body">
                <div class="d-flex justify-content-between">
                    <div>
                        <h4 class="mb-0">$@Model.Statistics.TotalEarned.ToString("N2")</h4>
                        <p class="mb-0">Total Earned</p>
                    </div>
                    <div class="align-self-center">
                        <i class="fas fa-dollar-sign fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Recent Transactions as Buyer -->
    <div class="col-lg-6 mb-4">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-shopping-cart text-primary"></i> Recent Purchases
                </h5>
                <a asp-action="Transactions" asp-route-filter="buyer" class="btn btn-sm btn-outline-primary">View
                    All</a>
            </div>
            <div class="card-body">
                @if (Model.BuyerTransactions.Any())
                {
                    @foreach (var transaction in Model.BuyerTransactions.Take(5))
                    {
                        <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                            <div>
                                <h6 class="mb-1">@transaction.Title</h6>
                                <small class="text-muted">@transaction.CreatedAt.ToString("MMM dd, yyyy")</small>
                            </div>
                            <div class="text-end">
                                <span class="badge bg-@GetStatusColor(transaction.Status)">@transaction.Status</span>
                                <div class="fw-bold">$@transaction.Amount.ToString("N2")</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fas fa-shopping-cart fa-3x text-muted mb-3"></i>
                        <p class="text-muted">No purchases yet</p>
                        <a href="#" class="btn btn-primary">Start Shopping</a>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Recent Transactions as Seller -->
    <div class="col-lg-6 mb-4">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-store text-success"></i> Recent Sales
                </h5>
                <a asp-action="Transactions" asp-route-filter="seller" class="btn btn-sm btn-outline-success">View
                    All</a>
            </div>
            <div class="card-body">
                @if (Model.SellerTransactions.Any())
                {
                    @foreach (var transaction in Model.SellerTransactions.Take(5))
                    {
                        <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                            <div>
                                <h6 class="mb-1">@transaction.Title</h6>
                                <small class="text-muted">@transaction.CreatedAt.ToString("MMM dd, yyyy")</small>
                            </div>
                            <div class="text-end">
                                <span class="badge bg-@GetStatusColor(transaction.Status)">@transaction.Status</span>
                                <div class="fw-bold">$@transaction.Amount.ToString("N2")</div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fas fa-store fa-3x text-muted mb-3"></i>
                        <p class="text-muted">No sales yet</p>
                        <a href="#" class="btn btn-success">Start Selling</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Recent Proof Submissions -->
@if (Model.RecentProofs.Any())
{
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-camera text-info"></i> Recent Proof Submissions
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        @foreach (var proof in Model.RecentProofs)
                        {
                            <div class="col-md-4 mb-3">
                                <div class="card border">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                            <h6 class="mb-0">@proof.Title</h6>
                                            <span class="badge bg-@GetProofStatusColor(proof.Status)">@proof.Status</span>
                                        </div>
                                        <p class="text-muted small mb-2">@proof.Description</p>
                                        <small class="text-muted">
                                            <i class="fas fa-clock"></i> @proof.SubmittedAt.ToString("MMM dd, yyyy HH:mm")
                                        </small>
                                        @if (proof.AIVerificationResult != null)
                                        {
                                            <div class="mt-2">
                                                <small class="text-muted">
                                                    AI Score: <span class="fw-bold">@((proof.AIVerificationResult.OverallScore *
                                                                                                    100).ToString("F0"))%</span>
                                                </small>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<!-- Quick Actions -->
<div class="row mt-4">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">
                    <i class="fas fa-bolt text-warning"></i> Quick Actions
                </h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <a href="#" class="btn btn-outline-primary w-100 mb-2">
                            <i class="fas fa-plus"></i><br>
                            Create Transaction
                        </a>
                    </div>
                    <div class="col-md-3">
                        <a href="#" class="btn btn-outline-success w-100 mb-2">
                            <i class="fas fa-upload"></i><br>
                            Upload Proof
                        </a>
                    </div>
                    <div class="col-md-3">
                        <a asp-action="Transactions" class="btn btn-outline-info w-100 mb-2">
                            <i class="fas fa-list"></i><br>
                            View All Transactions
                        </a>
                    </div>
                    <div class="col-md-3">
                        <a asp-controller="Auth" asp-action="Profile" class="btn btn-outline-secondary w-100 mb-2">
                            <i class="fas fa-user"></i><br>
                            Edit Profile
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusColor(PayPledge.Models.TransactionStatus status)
    {
        return status switch
        {
            PayPledge.Models.TransactionStatus.Created => "secondary",
            PayPledge.Models.TransactionStatus.AwaitingPayment => "warning",
            PayPledge.Models.TransactionStatus.PaymentReceived => "info",
            PayPledge.Models.TransactionStatus.InProgress => "primary",
            PayPledge.Models.TransactionStatus.AwaitingProof => "warning",
            PayPledge.Models.TransactionStatus.UnderReview => "info",
            PayPledge.Models.TransactionStatus.Completed => "success",
            PayPledge.Models.TransactionStatus.Disputed => "danger",
            PayPledge.Models.TransactionStatus.Cancelled => "dark",
            PayPledge.Models.TransactionStatus.Refunded => "secondary",
            _ => "secondary"
        };
    }

    string GetProofStatusColor(PayPledge.Models.ProofStatus status)
    {
        return status switch
        {
            PayPledge.Models.ProofStatus.Submitted => "secondary",
            PayPledge.Models.ProofStatus.Processing => "warning",
            PayPledge.Models.ProofStatus.Verified => "success",
            PayPledge.Models.ProofStatus.Rejected => "danger",
            PayPledge.Models.ProofStatus.RequiresReview => "info",
            PayPledge.Models.ProofStatus.Resubmitted => "primary",
            _ => "secondary"
        };
    }
}

<style>
    .card {
        transition: transform 0.2s;
    }

    .card:hover {
        transform: translateY(-2px);
    }

    .btn-outline-primary:hover,
    .btn-outline-success:hover,
    .btn-outline-info:hover,
    .btn-outline-secondary:hover {
        transform: translateY(-1px);
    }
</style>
